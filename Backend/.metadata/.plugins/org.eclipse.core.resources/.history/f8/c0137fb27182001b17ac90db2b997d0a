package com.wipro.repository;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.when;

import java.util.HashSet;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.mock.mockito.MockBean;

import com.wipro.controller.UserController;
import com.wipro.entity.User;

class UserRepositoryTest {
	@Autowired
	private UserController userController;

	@MockBean
	private UserRepository userRepository;

	@Test
	void testFindUserByEmail() {
		fail("Not yet implemented");
	}

	@Test
	void testSave() {
		fail("Not yet implemented");
	}

	@Test
	void testSaveAll() {
		fail("Not yet implemented");
	}

	@Test
	void testFindById() {
		fail("Not yet implemented");
	}

	@Test
	void testExistsById() {
		fail("Not yet implemented");
	}

	@Test
	void testFindAll() {
		when(userRepository.findAll()).thenReturn(Stream
				.of(new User(1L, "admin@mail.com", "pass", "India", true, new HashSet<>(), new HashSet<>()),
						new User(2L, "user@mail.com", "pass", "USA", false, new HashSet<>(), new HashSet<>()))
				.collect(Collectors.toList()));

		assertEquals(2, userController.getUsers());
	}

	@Test
	void testFindAllById() {
		fail("Not yet implemented");
	}

	@Test
	void testCount() {
		fail("Not yet implemented");
	}

	@Test
	void testDeleteById() {
		fail("Not yet implemented");
	}

	@Test
	void testDelete() {
		fail("Not yet implemented");
	}

	@Test
	void testDeleteAllIterableOfQextendsT() {
		fail("Not yet implemented");
	}

	@Test
	void testDeleteAll() {
		fail("Not yet implemented");
	}

}
